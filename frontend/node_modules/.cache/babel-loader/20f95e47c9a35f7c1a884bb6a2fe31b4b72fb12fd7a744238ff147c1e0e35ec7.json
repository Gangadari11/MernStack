{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\mernStack\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\n//useEffect: This hook allows you to perform actions when the page is rendered or \n// when certain things (dependencies) change, like setting up decorations for the room.\n//useState: This hook manages the page's \"mood\" or state, like a chalkboard where you can \n// write and update notes about what's happening in the room.\n\n//Home is the name of this room. It’s a functional component, which means \n// it behaves like a simple worker—it takes care of rendering the content and handling its logic.\n\n//The useEffect hook here is a placeholder—it’s called but does nothing yet. Typically, it would:\n//Run code when the page loads, like fetching data or logging a welcome message.\n//Perform cleanup when the page is removed, like turning off lights when leaving.\n\n//The outer <div> with the class name \"home\" acts as the room's \n// walls, providing a container for everything inside.\n\n//This allows the Home component to be used in other parts of \n// the application, like making this room accessible through the main navigation system (App.js).\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  useEffect(() => {\n    const response = aw;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Home","_s","response","aw","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projects/mernStack/frontend/src/pages/Home.js"],"sourcesContent":["import {useEffect , useState} from 'react'\r\n//useEffect: This hook allows you to perform actions when the page is rendered or \r\n// when certain things (dependencies) change, like setting up decorations for the room.\r\n//useState: This hook manages the page's \"mood\" or state, like a chalkboard where you can \r\n// write and update notes about what's happening in the room.\r\n\r\n\r\n//Home is the name of this room. It’s a functional component, which means \r\n// it behaves like a simple worker—it takes care of rendering the content and handling its logic.\r\n\r\n//The useEffect hook here is a placeholder—it’s called but does nothing yet. Typically, it would:\r\n//Run code when the page loads, like fetching data or logging a welcome message.\r\n//Perform cleanup when the page is removed, like turning off lights when leaving.\r\n\r\n//The outer <div> with the class name \"home\" acts as the room's \r\n// walls, providing a container for everything inside.\r\n\r\n//This allows the Home component to be used in other parts of \r\n// the application, like making this room accessible through the main navigation system (App.js).\r\n\r\nconst Home = () => {\r\n\r\n    useEffect(() => {\r\n        const response = aw\r\n    }\r\n    )\r\n    return (\r\n        <div className=\"home\">\r\n            <h2>Home</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home"],"mappings":";;AAAA,SAAQA,SAAS,EAAGC,QAAQ,QAAO,OAAO;AAC1C;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEfL,SAAS,CAAC,MAAM;IACZ,MAAMM,QAAQ,GAAGC,EAAE;EACvB,CACA,CAAC;EACD,oBACIJ,OAAA;IAAKK,SAAS,EAAC,MAAM;IAAAC,QAAA,eACjBN,OAAA;MAAAM,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd,CAAC;AAAAR,EAAA,CAXKD,IAAI;AAAAU,EAAA,GAAJV,IAAI;AAaV,eAAeA,IAAI;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}