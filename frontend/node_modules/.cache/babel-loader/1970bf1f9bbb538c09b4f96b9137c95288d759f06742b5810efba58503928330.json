{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\mernStack\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\n//useEffect: This hook allows you to perform actions when the page is rendered or \n// when certain things (dependencies) change, like setting up decorations for the room.\n//useState: This hook manages the page's \"mood\" or state, like a chalkboard where you can \n// write and update notes about what's happening in the room.\n\n//Component\nimport WorkoutDetails from '../components/WorkoutDetails';\n\n//Home is the name of this room. It’s a functional component, which means \n// it behaves like a simple worker—it takes care of rendering the content and handling its logic.\n\n//The useEffect hook here is a placeholder—it’s called but does nothing yet. Typically, it would:\n//Run code when the page loads, like fetching data or logging a welcome message.\n//Perform cleanup when the page is removed, like turning off lights when leaving.\n\n//The outer <div> with the class name \"home\" acts as the room's \n// walls, providing a container for everything inside.\n\n//This allows the Home component to be used in other parts of \n// the application, like making this room accessible through the main navigation system (App.js).\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [workouts, setWorkouts] = useState(null);\n  useEffect(() => {\n    const fetchWorkouts = async () => {\n      const response = await fetch('/api/workouts');\n      const json = await response.json();\n      if (response.ok) {\n        setWorkouts(json);\n      }\n    };\n    fetchWorkouts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workouts\",\n      children: workouts && workouts.map(workout => /*#__PURE__*/_jsxDEV(W, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"xTygnjI6uu33M/fWaALn5qxgxSE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","WorkoutDetails","jsxDEV","_jsxDEV","Home","_s","workouts","setWorkouts","fetchWorkouts","response","fetch","json","ok","className","children","map","workout","W","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projects/mernStack/frontend/src/pages/Home.js"],"sourcesContent":["import {useEffect , useState} from 'react'\r\n//useEffect: This hook allows you to perform actions when the page is rendered or \r\n// when certain things (dependencies) change, like setting up decorations for the room.\r\n//useState: This hook manages the page's \"mood\" or state, like a chalkboard where you can \r\n// write and update notes about what's happening in the room.\r\n\r\n//Component\r\nimport WorkoutDetails from '../components/WorkoutDetails'\r\n\r\n\r\n//Home is the name of this room. It’s a functional component, which means \r\n// it behaves like a simple worker—it takes care of rendering the content and handling its logic.\r\n\r\n//The useEffect hook here is a placeholder—it’s called but does nothing yet. Typically, it would:\r\n//Run code when the page loads, like fetching data or logging a welcome message.\r\n//Perform cleanup when the page is removed, like turning off lights when leaving.\r\n\r\n//The outer <div> with the class name \"home\" acts as the room's \r\n// walls, providing a container for everything inside.\r\n\r\n//This allows the Home component to be used in other parts of \r\n// the application, like making this room accessible through the main navigation system (App.js).\r\n\r\nconst Home = () => {\r\n\r\n    const [workouts , setWorkouts] = useState(null)\r\n    useEffect(() => {\r\n\r\n        const fetchWorkouts = async () => {\r\n            const response = await fetch('/api/workouts')\r\n            const json = await response.json()\r\n\r\n            if(response.ok){\r\n                setWorkouts(json)\r\n            }\r\n        }\r\n\r\n        fetchWorkouts()\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div className='workouts'>\r\n                {workouts && workouts.map((workout) => (\r\n                    <W/>\r\n                ))\r\n                }\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Home"],"mappings":";;AAAA,SAAQA,SAAS,EAAGC,QAAQ,QAAO,OAAO;AAC1C;AACA;AACA;AACA;;AAEA;AACA,OAAOC,cAAc,MAAM,8BAA8B;;AAGzD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAM,CAACC,QAAQ,EAAGC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC/CD,SAAS,CAAC,MAAM;IAEZ,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;MAC7C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;MAElC,IAAGF,QAAQ,CAACG,EAAE,EAAC;QACXL,WAAW,CAACI,IAAI,CAAC;MACrB;IACJ,CAAC;IAEDH,aAAa,CAAC,CAAC;EACnB,CAAC,EAAC,EAAE,CAAC;EAGL,oBACIL,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,eACjBX,OAAA;MAAKU,SAAS,EAAC,UAAU;MAAAC,QAAA,EACpBR,QAAQ,IAAIA,QAAQ,CAACS,GAAG,CAAEC,OAAO,iBAC9Bb,OAAA,CAACc,CAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAhB,EAAA,CA5BKD,IAAI;AAAAkB,EAAA,GAAJlB,IAAI;AA8BV,eAAeA,IAAI;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}