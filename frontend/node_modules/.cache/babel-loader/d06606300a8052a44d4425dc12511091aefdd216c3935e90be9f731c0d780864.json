{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\MernStackGit\\\\frontend\\\\src\\\\components\\\\WorkoutForm.js\",\n  _s = $RefreshSig$();\n// import {useState} from 'react'\n// import { useWorkoutsContext } from \"../hooks/useWorkoutsContext\"\n\n// const WorkoutForm = () => {\n//     const {dispatch} = useWorkoutsContext()\n//     const [title,setTitle] = useState('')\n//     const [load, setLoad] = useState('')\n//     const [reps, setReps] = useState('')\n//     const [error, setError] = useState(null)\n//     const [emptyFields, setEmptyFields] = useState([])\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault()\n//         const workout = {title,load,reps}\n\n//         const response = await fetch('/api/workouts/', {\n//             method: 'POST',\n//             body: JSON.stringify(workout),\n//             headers: {\n//                 'Content-Type'  : 'application/json'\n//             }\n//         })\n//         const json = await response.json()\n\n//         if(!response.ok){\n//             setError(json.error)\n//             setEmptyFields(json.emptyFields)\n//         }\n\n//         if(response.ok){\n//             setEmptyFields([])\n//             setTitle('')\n//             setLoad('')\n//             setReps('')\n//             setError(null)\n//             console.log('New Workout added:', json)\n//             dispatch({type: 'CREATE_WORKOUT' , payload: json})\n//         }\n//     }\n//     return(\n//         <form className=\"create\" onSubmit={handleSubmit}>\n//             <h3>Add a New Workout</h3>\n//             <label >Exercise Title:</label>\n//             <input\n//                 type=\"text\"\n//                 onChange={(e) => setTitle(e.target.value)}\n//                 value={title}\n//                 className= {emptyFields.includes('title') ? 'error' : ''}\n//             />\n\n//             <label > Load (in kg):</label>\n//             <input\n//                 type=\"number\"\n//                 onChange={(e) => setLoad(e.target.value)}\n//                 value={load}\n//                 className={emptyFields.includes('load') ? 'error' : ''}\n//             />\n\n//             <label > Reps:</label>\n//             <input\n//                 type=\"number\"\n//                 onChange={(e) => setReps(e.target.value)}\n//                 value={reps}\n//                 className={emptyFields.includes('reps') ? 'error' : ''}\n//             />\n\n//             <button>Add Workout</button>\n//             {error && <div className=\"error\">{error}</div>}\n//         </form>\n//     )\n// }\n// export default WorkoutForm\n\nimport { useState } from 'react';\nimport { useWorkoutsContext } from '../hooks/useWorkoutsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkoutForm = () => {\n  _s();\n  const {\n    dispatch\n  } = useWorkoutsContext();\n  const [title, setTitle] = useState('');\n  const [load, setLoad] = useState('');\n  const [reps, setReps] = useState('');\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const workout = {\n      title,\n      load,\n      reps\n    };\n    const response = await fetch('/api/workouts', {\n      method: 'POST',\n      body: JSON.stringify(workout),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setEmptyFields([]);\n      setError(null);\n      setTitle('');\n      setLoad('');\n      setReps('');\n      dispatch({\n        type: 'CREATE_WORKOUT',\n        payload: json\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a New Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Excersize Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTitle(e.target.value),\n      value: title,\n      className: emptyFields.includes('title') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Time Spent (in minutes):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => setLoad(e.target.value),\n      value: load,\n      className: emptyFields.includes('load') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Mo:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => setReps(e.target.value),\n      value: reps,\n      className: emptyFields.includes('reps') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkoutForm, \"GrkyAr+RfUGuMIQckYm/JR2qyt8=\", false, function () {\n  return [useWorkoutsContext];\n});\n_c = WorkoutForm;\nexport default WorkoutForm;\nvar _c;\n$RefreshReg$(_c, \"WorkoutForm\");","map":{"version":3,"names":["useState","useWorkoutsContext","jsxDEV","_jsxDEV","WorkoutForm","_s","dispatch","title","setTitle","load","setLoad","reps","setReps","error","setError","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","workout","response","fetch","method","body","JSON","stringify","headers","json","ok","type","payload","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","includes","_c","$RefreshReg$"],"sources":["D:/Projects/MernStackGit/frontend/src/components/WorkoutForm.js"],"sourcesContent":["// import {useState} from 'react'\r\n// import { useWorkoutsContext } from \"../hooks/useWorkoutsContext\"\r\n\r\n// const WorkoutForm = () => {\r\n//     const {dispatch} = useWorkoutsContext()\r\n//     const [title,setTitle] = useState('')\r\n//     const [load, setLoad] = useState('')\r\n//     const [reps, setReps] = useState('')\r\n//     const [error, setError] = useState(null)\r\n//     const [emptyFields, setEmptyFields] = useState([])\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault()\r\n//         const workout = {title,load,reps}\r\n\r\n//         const response = await fetch('/api/workouts/', {\r\n//             method: 'POST',\r\n//             body: JSON.stringify(workout),\r\n//             headers: {\r\n//                 'Content-Type'  : 'application/json'\r\n//             }\r\n//         })\r\n//         const json = await response.json()\r\n\r\n//         if(!response.ok){\r\n//             setError(json.error)\r\n//             setEmptyFields(json.emptyFields)\r\n//         }\r\n\r\n//         if(response.ok){\r\n//             setEmptyFields([])\r\n//             setTitle('')\r\n//             setLoad('')\r\n//             setReps('')\r\n//             setError(null)\r\n//             console.log('New Workout added:', json)\r\n//             dispatch({type: 'CREATE_WORKOUT' , payload: json})\r\n//         }\r\n//     }\r\n//     return(\r\n//         <form className=\"create\" onSubmit={handleSubmit}>\r\n//             <h3>Add a New Workout</h3>\r\n//             <label >Exercise Title:</label>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 onChange={(e) => setTitle(e.target.value)}\r\n//                 value={title}\r\n//                 className= {emptyFields.includes('title') ? 'error' : ''}\r\n//             />\r\n\r\n//             <label > Load (in kg):</label>\r\n//             <input\r\n//                 type=\"number\"\r\n//                 onChange={(e) => setLoad(e.target.value)}\r\n//                 value={load}\r\n//                 className={emptyFields.includes('load') ? 'error' : ''}\r\n//             />\r\n\r\n//             <label > Reps:</label>\r\n//             <input\r\n//                 type=\"number\"\r\n//                 onChange={(e) => setReps(e.target.value)}\r\n//                 value={reps}\r\n//                 className={emptyFields.includes('reps') ? 'error' : ''}\r\n//             />\r\n\r\n//             <button>Add Workout</button>\r\n//             {error && <div className=\"error\">{error}</div>}\r\n//         </form>\r\n//     )\r\n// }\r\n// export default WorkoutForm\r\n\r\n\r\nimport { useState } from 'react'\r\nimport { useWorkoutsContext } from '../hooks/useWorkoutsContext'\r\n\r\nconst WorkoutForm = () => {\r\n  const { dispatch } = useWorkoutsContext()\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [load, setLoad] = useState('')\r\n  const [reps, setReps] = useState('')\r\n  const [error, setError] = useState(null)\r\n  const [emptyFields, setEmptyFields] = useState([])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    const workout = {title, load, reps}\r\n    \r\n    const response = await fetch('/api/workouts', {\r\n      method: 'POST',\r\n      body: JSON.stringify(workout),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    const json = await response.json()\r\n\r\n    if (!response.ok) {\r\n      setError(json.error)\r\n      setEmptyFields(json.emptyFields)\r\n    }\r\n    if (response.ok) {\r\n      setEmptyFields([])\r\n      setError(null)\r\n      setTitle('')\r\n      setLoad('')\r\n      setReps('')\r\n      dispatch({type: 'CREATE_WORKOUT', payload: json})\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <form className=\"create\" onSubmit={handleSubmit}> \r\n      <h3>Add a New Workout</h3>\r\n\r\n      <label>Excersize Title:</label>\r\n      <input \r\n        type=\"text\" \r\n        onChange={(e) => setTitle(e.target.value)} \r\n        value={title}\r\n        className={emptyFields.includes('title') ? 'error' : ''}\r\n      />\r\n\r\n      <label>Time Spent (in minutes):</label>\r\n      <input \r\n        type=\"number\" \r\n        onChange={(e) => setLoad(e.target.value)} \r\n        value={load}\r\n        className={emptyFields.includes('load') ? 'error' : ''}\r\n      />\r\n\r\n      <label>Mo:</label>\r\n      <input \r\n        type=\"number\" \r\n        onChange={(e) => setReps(e.target.value)} \r\n        value={reps}\r\n        className={emptyFields.includes('reps') ? 'error' : ''}\r\n      />\r\n\r\n      <button>Add Workout</button>\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default WorkoutForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}